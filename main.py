# Напишите программу, которая принимает на вход цифру, обозначающую день недели, и проверяет, является ли этот день выходным.

a = int(input('Введите день недели: '))
if 0 < a < 6:
    print('Нет')
elif a == 6 or a == 7:
    print('Да')
else:
    print('Ты чё?! сколько дней в твоей неделе?!')



# Напишите программу для. проверки истинности утверждения ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех значений предикат.

for x in range(2):
        for y in range(2):
            for z in range(2):
                print(not (x or y or z) == (not x and not y and not z))
                print(x, y, z)



# Напишите программу, которая принимает на вход координаты точки (X и Y), причём X ≠ 0 и Y ≠ 0 и выдаёт номер четверти плоскости, в которой находится эта точка (или на какой оси она находится).

userX = int(input('Введите число по оси Х: '))
userY = int(input('Введите число по оси Y: '))

if userX > 0 and userY > 0:
    print('Первая четверть')

if userX < 0 and userY > 0:
    print('Вторая четверть')

if userX < 0 and userY < 0:
    print('Третья четверть')

if userX > 0 and userY < 0:
    print('Четвертая четверть')

if userX == 0 or userY == 0:
    prit('Введите другие числа')



# Напишите программу, которая по заданному номеру четверти, показывает диапазон возможных координат точек в этой четверти (x и y).

user = int(input('Введите номер четверти: '))

if user == 1:
    print('Диапазон по оси Х от 0 до oo, по оси Y от 0 до оо')

if user == 2:
    print('Диапазон по оси Х от 0 до -oo, по оси Y от 0 до оо')

if user == 3:
    print('Диапазон по оси Х от 0 до -oo, по оси Y от 0 до -оо')

if user == 4:
    print('Диапазон по оси Х от 0 до oo, по оси Y от 0 до -оо')



# Напишите программу, которая принимает на вход координаты двух точек и находит расстояние между ними в 2D пространстве.

print('Введите координаты двух точек')

x1 = float(input('Введите х1: '))

y1 = float(input('Введите y1: '))

x2 = float(input('Введите х2: '))

y2 = float(input('Введите y2: '))

res = round(((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5, 3)

print(res)